---
title: "GitHub Actions: Criando Seu Primeiro Pipeline CI/CD em 2025"
description: "Aprenda a criar seu primeiro pipeline de CI/CD no GitHub usando Actions, simulando deploys para ambientes dev, qa, hml e prd. Tutorial pr치tico para quem quer dominar automa칞칚o de workflows DevOps."
authors: [Ieso]
tags:
  - "github actions"
  - "pipeline ci cd"
  - "automa칞칚o de deploy"
  - "devops para iniciantes"
  - "infraestrutura como c칩digo"
  - "cicd github workflows"
  - "devops brasil 2025"
date: 2025-04-25
sidebar_position: 2
---

# Laborat칩rio de GitHub Actions - Criando Sua Primeira Action

游녤 Veja meu curso da Udemy: [Curso DevOps na Pr치tica](https://devopsautomation.com.br/go/udemy-cupom)

## Objetivo
Aprender a criar uma GitHub Action b치sica que simula deploys para os ambientes `dev`, `qa`, `hml` e `prd`.

---

## Passo 1: Configurar o Reposit칩rio no GitHub

1. Acesse o GitHub e crie um novo reposit칩rio chamado `ga-lab-mdc`.
2. Clone o reposit칩rio localmente:

```bash
git clone https://github.com/seu-usuario/ga-lab-mdc.git
```

3. Acesse o diret칩rio do reposit칩rio:

```bash
cd ga-lab-mdc
```

4. Crie o diret칩rio para o workflow do GitHub Actions:

```bash
mkdir -p .github/workflows
```

---

## Passo 2: Criar o Workflow

1. Dentro do diret칩rio `.github/workflows`, crie um arquivo chamado `ci_cd_pipeline.yml`.
2. Cole o seguinte conte칰do no arquivo:

```yaml
name: CI/CD Pipeline

on: push

jobs:
  build_dev:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: 'dev'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up environment
      run: echo "Setting up $ENVIRONMENT environment"

    - name: Install dependencies
      run: echo "Installing dependencies for $ENVIRONMENT"

    - name: Build App
      run: echo "Building app for $ENVIRONMENT environment"

    - name: Test App
      run: echo "Testing app for $ENVIRONMENT environment"

    - name: Deploy App
      run: echo "Deploying app to $ENVIRONMENT environment"

  build_qa:
    needs: build_dev
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: 'qa'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up environment
      run: echo "Setting up $ENVIRONMENT environment"

    - name: Install dependencies
      run: echo "Installing dependencies for $ENVIRONMENT"

    - name: Build App
      run: echo "Building app for $ENVIRONMENT environment"

    - name: Test App
      run: echo "Testing app for $ENVIRONMENT environment"

    - name: Deploy App
      run: echo "Deploying app to $ENVIRONMENT environment"

  build_hml:
    needs: build_qa
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: 'hml'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up environment
      run: echo "Setting up $ENVIRONMENT environment"

    - name: Install dependencies
      run: echo "Installing dependencies for $ENVIRONMENT"

    - name: Build App
      run: echo "Building app for $ENVIRONMENT environment"

    - name: Test App
      run: echo "Testing app for $ENVIRONMENT environment"

    - name: Deploy App
      run: echo "Deploying app to $ENVIRONMENT environment"

  build_prd:
    needs: build_hml
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: 'prd'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up environment
      run: echo "Setting up $ENVIRONMENT environment"

    - name: Install dependencies
      run: echo "Installing dependencies for $ENVIRONMENT"

    - name: Build App
      run: echo "Building app for $ENVIRONMENT environment"

    - name: Deploy App
      run: echo "Deploying app to $ENVIRONMENT environment"
```

---

Lembre-se, este 칠 apenas um exemplo b치sico. Em cen치rios reais, voc칡 usar치 comandos e scripts personalizados para cada etapa do seu pipeline de CI/CD.