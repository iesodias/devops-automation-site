"use strict";(self.webpackChunkdevops_automation_site=self.webpackChunkdevops_automation_site||[]).push([[5316],{6473:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"lab-16-confest-opa","title":"Lab 16 - Aplicando Pol\xedticas OPA/Conftest para Storage Account no Azure","description":"Introdu\xe7\xe3o","source":"@site/curso-terraform-udemy/34-lab-opa-vm-confest copy.md","sourceDirName":".","slug":"/lab-16-confest-opa","permalink":"/udemy/terraform-automacao/lab-16-confest-opa","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":34,"frontMatter":{"id":"lab-16-confest-opa","title":"Lab 16 - Aplicando Pol\xedticas OPA/Conftest para Storage Account no Azure","noindex":"trues"},"sidebar":"tutorialSidebar","previous":{"title":"Lab 15 - Impedindo Inst\xe2ncias Caras com OPA/Conftest no Terraform","permalink":"/udemy/terraform-automacao/lab-15-confest-opa"}}');var a=n(4848),t=n(8453);const s={id:"lab-16-confest-opa",title:"Lab 16 - Aplicando Pol\xedticas OPA/Conftest para Storage Account no Azure",noindex:"trues"},i="Lab: Aplicando Pol\xedticas OPA/Conftest para Storage Account no Azure",c={},l=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:2},{value:"Objetivo",id:"objetivo",level:2},{value:"Estrutura de arquivos",id:"estrutura-de-arquivos",level:2},{value:"Estrutura esperada",id:"estrutura-esperada",level:3},{value:"provider.tf",id:"providertf",level:2},{value:"variables.tf",id:"variablestf",level:2},{value:"terraform.tfvars",id:"terraformtfvars",level:2},{value:"main.tf",id:"maintf",level:2},{value:"outputs.tf",id:"outputstf",level:2},{value:"policies/storage_policy.rego",id:"policiesstorage_policyrego",level:2},{value:"Comandos Terraform e OPA/Conftest",id:"comandos-terraform-e-opaconftest",level:2},{value:"Resultado Esperado",id:"resultado-esperado",level:2},{value:"Dicas e Boas Pr\xe1ticas",id:"dicas-e-boas-pr\xe1ticas",level:2}];function u(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"lab-aplicando-pol\xedticas-opaconftest-para-storage-account-no-azure",children:"Lab: Aplicando Pol\xedticas OPA/Conftest para Storage Account no Azure"})}),"\n",(0,a.jsx)(r.h2,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,a.jsxs)(r.p,{children:["Este lab demonstra como criar um Resource Group e uma Storage Account no Azure com Terraform 1.12.2, utilizando ",(0,a.jsx)(r.strong,{children:"OPA/Conftest"})," para validar regras de conformidade."]}),"\n",(0,a.jsx)(r.h2,{id:"objetivo",children:"Objetivo"}),"\n",(0,a.jsx)(r.p,{children:"Criar:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["1 Resource Group chamado ",(0,a.jsx)(r.code,{children:"devopsautomation-rg"})]}),"\n",(0,a.jsxs)(r.li,{children:["1 Storage Account\nE aplicar valida\xe7\xf5es com ",(0,a.jsx)(r.strong,{children:"OPA/Conftest"})," para garantir boas pr\xe1ticas."]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"estrutura-de-arquivos",children:"Estrutura de arquivos"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"mkdir -p lab-opa-storage/policy && cd lab-opa-storage\n\ntouch main.tf variables.tf outputs.tf provider.tf terraform.tfvars\ncd policy && touch storage_policy.rego && cd ..\n"})}),"\n",(0,a.jsx)(r.h3,{id:"estrutura-esperada",children:"Estrutura esperada"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"lab-opa-storage/\n\u251c\u2500\u2500 main.tf\n\u251c\u2500\u2500 outputs.tf\n\u251c\u2500\u2500 provider.tf\n\u251c\u2500\u2500 variables.tf\n\u251c\u2500\u2500 terraform.tfvars\n\u2514\u2500\u2500 policy\n    \u2514\u2500\u2500 storage_policy.rego\n"})}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"providertf",children:"provider.tf"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-terraform",children:'terraform {\n  required_version = ">= 1.12.2"\n  required_providers {\n    azurerm = {\n      source  = "hashicorp/azurerm"\n      version = ">= 2.0"\n    }\n  }\n}\n\nprovider "azurerm" {\n  features {}\n}\n'})}),"\n",(0,a.jsx)(r.h2,{id:"variablestf",children:"variables.tf"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-terraform",children:'variable "location" {\n  default = "eastus"\n}\n\nvariable "resource_group_name" {\n  default = "devopsautomation-rg"\n}\n\nvariable "storage_account_name" {\n  default = "devopsautostore01"\n}\n'})}),"\n",(0,a.jsx)(r.h2,{id:"terraformtfvars",children:"terraform.tfvars"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-hcl",children:"# Override opcional\n"})}),"\n",(0,a.jsx)(r.h2,{id:"maintf",children:"main.tf"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-terraform",children:'resource "azurerm_resource_group" "rg" {\n  name     = var.resource_group_name\n  location = var.location\n}\n\nresource "azurerm_storage_account" "storage" {\n  name                     = var.storage_account_name\n  resource_group_name      = azurerm_resource_group.rg.name\n  location                 = var.location\n  account_tier             = "Standard"\n  account_replication_type = "LRS"\n\n  min_tls_version = "TLS1_0"\n\n  infrastructure_encryption_enabled = true\n\n  public_network_access_enabled   = false\n  allow_nested_items_to_be_public = false\n\n  blob_properties {\n    delete_retention_policy {\n      days = 7\n    }\n  }\n\n  network_rules {\n    default_action = "Deny"         # Mais seguro que Allow\n    bypass         = ["AzureServices"]\n  }\n}\n'})}),"\n",(0,a.jsx)(r.h2,{id:"outputstf",children:"outputs.tf"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-terraform",children:'output "storage_account_name" {\n  value = azurerm_storage_account.storage.name\n}\n\noutput "resource_group_name" {\n  value = azurerm_resource_group.rg.name\n}\n'})}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"policiesstorage_policyrego",children:"policies/storage_policy.rego"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-rego",children:'package main\n\nimport rego.v1\n\ndeny contains msg if {\n  some i\n  resource := input.planned_values.root_module.resources[i]\n  resource.type == "azurerm_storage_account"\n\n  # Verifica a vers\xe3o do TLS\n  not tls_seguro(resource.values.min_tls_version)\n\n  msg := "Storage Account deve usar TLS 1.2 ou superior (HTTPS obrigat\xf3rio)."\n}\n\n# Regra: TLS \xe9 considerado seguro se for TLS1_2 ou TLS1_3\ntls_seguro(versao) if versao == "TLS1_2"\ntls_seguro(versao) if versao == "TLS1_3"\n\n'})}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"comandos-terraform-e-opaconftest",children:"Comandos Terraform e OPA/Conftest"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform init\nterraform plan -out=tfplan.binary\nterraform show -json tfplan.binary > tfplan.json\nconftest test tfplan.json --policy policy\n"})}),"\n",(0,a.jsx)(r.h2,{id:"resultado-esperado",children:"Resultado Esperado"}),"\n",(0,a.jsx)(r.p,{children:"O Conftest deve emitir:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{children:"FAIL - tfplan.json - main.deny[0]: Storage Account deve usar TLS 1.2 ou superior.\n"})}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"dicas-e-boas-pr\xe1ticas",children:"Dicas e Boas Pr\xe1ticas"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["Sempre use ",(0,a.jsx)(r.code,{children:'min_tls_version = "TLS1_2"'})," ou superior"]}),"\n",(0,a.jsx)(r.li,{children:"Centralize regras OPA no reposit\xf3rio de infraestrutura"}),"\n",(0,a.jsx)(r.li,{children:"Integre Conftest no CI/CD para prevenir aplica\xe7\xf5es inseguras"}),"\n"]}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsxs)(r.p,{children:["Este laborat\xf3rio permite validar configura\xe7\xf5es sens\xedveis com OPA/Conftest antes do ",(0,a.jsx)(r.code,{children:"apply"}),", promovendo conformidade e seguran\xe7a desde o desenvolvimento."]})]})}function d(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>i});var o=n(6540);const a={},t=o.createContext(a);function s(e){const r=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(t.Provider,{value:r},e.children)}}}]);