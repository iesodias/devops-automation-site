"use strict";(self.webpackChunkdevops_automation_site=self.webpackChunkdevops_automation_site||[]).push([[1052],{5861:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>t,metadata:()=>r,toc:()=>_});const r=JSON.parse('{"id":"99-projeto-final-corrigido","title":"Lab Final - Projeto Final Terraform - Azure VM Infrastructure (Corrigido)","description":"Introdu\xe7\xe3o","source":"@site/curso-terraform-udemy/99-projeto-final-corrigido.md","sourceDirName":".","slug":"/99-projeto-final-corrigido","permalink":"/udemy/terraform-automacao/99-projeto-final-corrigido","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":99,"frontMatter":{"id":"99-projeto-final-corrigido","title":"Lab Final - Projeto Final Terraform - Azure VM Infrastructure (Corrigido)","noindex":true}}');var o=a(4848),i=a(8453);const t={id:"99-projeto-final-corrigido",title:"Lab Final - Projeto Final Terraform - Azure VM Infrastructure (Corrigido)",noindex:!0},s="Projeto Final Terraform - Azure VM Infrastructure (Corrigido)",u={},_=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:2},{value:"Arquitetura",id:"arquitetura",level:2},{value:"Pr\xe9-requisitos",id:"pr\xe9-requisitos",level:2},{value:"Passo a Passo",id:"passo-a-passo",level:2},{value:"1. Cria\xe7\xe3o da Estrutura do Projeto",id:"1-cria\xe7\xe3o-da-estrutura-do-projeto",level:3},{value:"2. Configura\xe7\xe3o do .gitignore",id:"2-configura\xe7\xe3o-do-gitignore",level:3},{value:"3. Cria\xe7\xe3o dos Arquivos Terraform",id:"3-cria\xe7\xe3o-dos-arquivos-terraform",level:3},{value:"4. Configura\xe7\xe3o dos Ambientes",id:"4-configura\xe7\xe3o-dos-ambientes",level:3}];function c(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"projeto-final-terraform---azure-vm-infrastructure-corrigido",children:"Projeto Final Terraform - Azure VM Infrastructure (Corrigido)"})}),"\n",(0,o.jsx)(e.h2,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,o.jsxs)(e.p,{children:["Este projeto demonstra o uso avan\xe7ado do Terraform para criar uma infraestrutura completa no Azure, incluindo VMs Linux, networking, storage, security, monitoring e backup. O projeto abrange as principais funcionalidades do Terraform como variables, locals, outputs, count, providers m\xfaltiplos e recursos condicionais. ",(0,o.jsx)(e.strong,{children:"Esta vers\xe3o cont\xe9m as corre\xe7\xf5es para ser funcional."})]}),"\n",(0,o.jsx)(e.h2,{id:"arquitetura",children:"Arquitetura"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Compute"}),": VMs Linux Ubuntu com discos adicionais"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Networking"}),": VNet, Subnets, NSGs, Public IPs"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Security"}),": Key Vault, SSH Keys, Application Security Groups"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Storage"}),": Storage Account, Managed Disks"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Monitoring"}),": Log Analytics, Azure Monitor, Alerts"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Backup"}),": Recovery Services Vault (condicional)"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Automation"}),": Auto-shutdown para economia de custos"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"pr\xe9-requisitos",children:"Pr\xe9-requisitos"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Azure CLI instalado e configurado"}),"\n",(0,o.jsx)(e.li,{children:"Terraform >= 1.5.0"}),"\n",(0,o.jsx)(e.li,{children:"Conta Azure (free tier funciona)"}),"\n",(0,o.jsx)(e.li,{children:"Git (opcional)"}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"passo-a-passo",children:"Passo a Passo"}),"\n",(0,o.jsx)(e.h3,{id:"1-cria\xe7\xe3o-da-estrutura-do-projeto",children:"1. Cria\xe7\xe3o da Estrutura do Projeto"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"mkdir azure-terraform-vm-project && cd azure-terraform-vm-project\ntouch {main,variables,locals,outputs,versions,additional-resources}.tf\ntouch {terraform,dev,prod}.tfvars\ntouch README.md .gitignore\n"})}),"\n",(0,o.jsx)(e.h3,{id:"2-configura\xe7\xe3o-do-gitignore",children:"2. Configura\xe7\xe3o do .gitignore"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"cat > .gitignore << 'EOF'\n*.tfstate\n*.tfstate.*\n.terraform/\n.terraform.lock.hcl\ncrash.log\noverride.tf\n*.swp\n*.pem\n*.key\n.env\nEOF\n"})}),"\n",(0,o.jsx)(e.h3,{id:"3-cria\xe7\xe3o-dos-arquivos-terraform",children:"3. Cria\xe7\xe3o dos Arquivos Terraform"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"main.tf"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'provider "azurerm" {\n  features {\n    resource_group {\n      prevent_deletion_if_contains_resources = false\n    }\n    virtual_machine {\n      delete_os_disk_on_deletion     = true\n      graceful_shutdown              = false\n      skip_shutdown_and_force_delete = false\n    }\n  }\n}\n\n# Data sources para informa\xe7\xf5es existentes\ndata "azurerm_client_config" "current" {}\n\n# Resource Group\nresource "azurerm_resource_group" "main" {\n  name     = local.resource_group_name\n  location = var.location\n\n  tags = local.common_tags\n}\n\n# Virtual Network\nresource "azurerm_virtual_network" "main" {\n  name                = local.vnet_name\n  address_space       = [var.vnet_address_space]\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n\n  tags = local.common_tags\n}\n\n# Subnets\nresource "azurerm_subnet" "web" {\n  name                 = local.web_subnet_name\n  resource_group_name  = azurerm_resource_group.main.name\n  virtual_network_name = azurerm_virtual_network.main.name\n  address_prefixes     = [var.web_subnet_address_prefix]\n}\n\nresource "azurerm_subnet" "database" {\n  name                 = local.db_subnet_name\n  resource_group_name  = azurerm_resource_group.main.name\n  virtual_network_name = azurerm_virtual_network.main.name\n  address_prefixes     = [var.db_subnet_address_prefix]\n}\n\n# Network Security Groups\nresource "azurerm_network_security_group" "web" {\n  name                = local.web_nsg_name\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n\n  dynamic "security_rule" {\n    for_each = local.all_security_rules\n\n    content {\n      name                       = security_rule.value.name\n      priority                   = security_rule.value.priority\n      direction                  = security_rule.value.direction\n      access                     = security_rule.value.access\n      protocol                   = security_rule.value.protocol\n      source_port_range          = security_rule.value.source_port_range\n      destination_port_range     = security_rule.value.destination_port_range\n      source_address_prefix      = security_rule.value.source_address_prefix\n      destination_address_prefix = security_rule.value.destination_address_prefix\n    }\n  }\n\n  tags = local.common_tags\n}\n\n# Associate NSG to subnet\nresource "azurerm_subnet_network_security_group_association" "web" {\n  subnet_id                 = azurerm_subnet.web.id\n  network_security_group_id = azurerm_network_security_group.web.id\n}\n\n# Public IP\nresource "azurerm_public_ip" "main" {\n  count               = var.vm_count\n  name                = "${local.public_ip_name}-${count.index + 1}"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  allocation_method   = "Dynamic"\n  domain_name_label   = "${local.dns_prefix}-${count.index + 1}"\n\n  tags = local.common_tags\n}\n\n# Load Balancer (quando h\xe1 mais de uma VM)\nresource "azurerm_lb" "main" {\n  count               = var.vm_count > 1 ? 1 : 0\n  name                = local.lb_name\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n\n  frontend_ip_configuration {\n    name                 = "PublicIPAddress"\n    public_ip_address_id = azurerm_public_ip.lb[0].id\n  }\n\n  tags = local.common_tags\n}\n\nresource "azurerm_public_ip" "lb" {\n  count               = var.vm_count > 1 ? 1 : 0\n  name                = "${local.public_ip_name}-lb"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  allocation_method   = "Static"\n  sku                 = "Standard"\n\n  tags = local.common_tags\n}\n\n# Network Interface\nresource "azurerm_network_interface" "main" {\n  count               = var.vm_count\n  name                = "${local.nic_name}-${count.index + 1}"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n\n  ip_configuration {\n    name                          = "internal"\n    subnet_id                     = azurerm_subnet.web.id\n    private_ip_address_allocation = "Dynamic"\n    public_ip_address_id          = var.vm_count > 1 ? null : azurerm_public_ip.main[count.index].id\n  }\n\n  tags = local.common_tags\n}\n\n# Generate SSH key\nresource "tls_private_key" "ssh" {\n  algorithm = "RSA"\n  rsa_bits  = 4096\n}\n\n# Storage Account para boot diagnostics\nresource "random_id" "storage_suffix" {\n  byte_length = 4\n}\n\nresource "azurerm_storage_account" "boot_diagnostics" {\n  name                     = "${local.storage_account_prefix}${random_id.storage_suffix.hex}"\n  resource_group_name      = azurerm_resource_group.main.name\n  location                 = azurerm_resource_group.main.location\n  account_tier             = "Standard"\n  account_replication_type = "LRS"\n\n  tags = local.common_tags\n}\n\n# Key Vault para armazenar secrets\nresource "azurerm_key_vault" "main" {\n  name                       = local.key_vault_name\n  location                   = azurerm_resource_group.main.location\n  resource_group_name        = azurerm_resource_group.main.name\n  tenant_id                  = data.azurerm_client_config.current.tenant_id\n  sku_name                   = "standard"\n  soft_delete_retention_days = 7\n\n  access_policy {\n    tenant_id = data.azurerm_client_config.current.tenant_id\n    object_id = data.azurerm_client_config.current.object_id\n\n    secret_permissions = [\n      "Get", "List", "Set", "Delete", "Purge"\n    ]\n  }\n\n  tags = local.common_tags\n}\n\n# Armazenar chave SSH no Key Vault\nresource "azurerm_key_vault_secret" "ssh_private_key" {\n  name         = "ssh-private-key"\n  value        = tls_private_key.ssh.private_key_pem\n  key_vault_id = azurerm_key_vault.main.id\n\n  tags = local.common_tags\n}\n\n# Virtual Machines\nresource "azurerm_linux_virtual_machine" "main" {\n  count                           = var.vm_count\n  name                            = "${local.vm_name}-${count.index + 1}"\n  location                        = azurerm_resource_group.main.location\n  resource_group_name             = azurerm_resource_group.main.name\n  size                            = var.vm_size\n  admin_username                  = var.admin_username\n  disable_password_authentication = true\n  availability_set_id             = var.vm_count > 1 ? azurerm_availability_set.main[0].id : null\n\n  network_interface_ids = [\n    azurerm_network_interface.main[count.index].id,\n  ]\n\n  admin_ssh_key {\n    username   = var.admin_username\n    public_key = tls_private_key.ssh.public_key_openssh\n  }\n\n  os_disk {\n    caching              = "ReadWrite"\n    storage_account_type = var.os_disk_type\n  }\n\n  source_image_reference {\n    publisher = var.vm_image.publisher\n    offer     = var.vm_image.offer\n    sku       = var.vm_image.sku\n    version   = var.vm_image.version\n  }\n\n  boot_diagnostics {\n    storage_account_uri = azurerm_storage_account.boot_diagnostics.primary_blob_endpoint\n  }\n\n  depends_on = [\n    tls_private_key.ssh,\n    azurerm_key_vault_secret.ssh_private_key\n  ]\n\n  tags = merge(local.common_tags, {\n    Name = "${local.vm_name}-${count.index + 1}"\n    Tier = "Web"\n  })\n}\n\n# Managed Disk adicional para dados\nresource "azurerm_managed_disk" "data" {\n  count                = var.vm_count\n  name                 = "${local.vm_name}-${count.index + 1}-data-disk"\n  location             = azurerm_resource_group.main.location\n  resource_group_name  = azurerm_resource_group.main.name\n  storage_account_type = "Premium_LRS"\n  create_option        = "Empty"\n  disk_size_gb         = var.data_disk_size_gb\n\n  tags = local.common_tags\n}\n\n# Anexar disco de dados \xe0s VMs\nresource "azurerm_virtual_machine_data_disk_attachment" "data" {\n  count              = var.vm_count\n  managed_disk_id    = azurerm_managed_disk.data[count.index].id\n  virtual_machine_id = azurerm_linux_virtual_machine.main[count.index].id\n  lun                = "10"\n  caching            = "ReadWrite"\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"variables.tf"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# variables.tf\n\nvariable "project_name" {\n  description = "Nome do projeto que ser\xe1 usado como prefixo para recursos"\n  type        = string\n  default     = "webapp"\n  \n  validation {\n    condition     = can(regex("^[a-z0-9]+$", var.project_name))\n    error_message = "Project name deve conter apenas letras min\xfasculas e n\xfameros."\n  }\n}\n\nvariable "environment" {\n  description = "Environment (dev, staging, prod)"\n  type        = string\n  default     = "dev"\n  \n  validation {\n    condition     = contains(["dev", "staging", "prod"], var.environment)\n    error_message = "Environment deve ser: dev, staging, ou prod."\n  }\n}\n\nvariable "location" {\n  description = "Azure region onde os recursos ser\xe3o criados"\n  type        = string\n  default     = "Brazil South"\n  \n  validation {\n    condition = contains([\n      "Brazil South",\n      "East US",\n      "East US 2",\n      "West US",\n      "West US 2",\n      "Central US",\n      "North Central US",\n      "South Central US",\n      "West Central US",\n      "Canada Central",\n      "Canada East",\n      "West Europe",\n      "North Europe",\n      "UK South",\n      "UK West",\n      "France Central",\n      "Germany West Central",\n      "Switzerland North",\n      "Norway East",\n      "Sweden Central"\n    ], var.location)\n    error_message = "Location deve ser uma regi\xe3o Azure v\xe1lida."\n  }\n}\n\nvariable "vm_count" {\n  description = "N\xfamero de VMs a serem criadas"\n  type        = number\n  default     = 1\n  \n  validation {\n    condition     = var.vm_count >= 1 && var.vm_count <= 5\n    error_message = "VM count deve estar entre 1 e 5."\n  }\n}\n\nvariable "vm_size" {\n  description = "Tamanho da VM"\n  type        = string\n  default     = "Standard_B2s"\n  \n  validation {\n    condition = contains([\n      "Standard_B1s",\n      "Standard_B1ms", \n      "Standard_B2s",\n      "Standard_B2ms",\n      "Standard_B4ms",\n      "Standard_D2s_v3",\n      "Standard_D4s_v3",\n      "Standard_F2s_v2",\n      "Standard_F4s_v2"\n    ], var.vm_size)\n    error_message = "VM size deve ser um dos tamanhos aprovados."\n  }\n}\n\nvariable "admin_username" {\n  description = "Nome de usu\xe1rio administrativo para as VMs"\n  type        = string\n  default     = "azureuser"\n  \n  validation {\n    condition     = can(regex("^[a-z][a-z0-9]{2,19}$", var.admin_username))\n    error_message = "Admin username deve come\xe7ar com letra min\xfascula e ter entre 3-20 caracteres."\n  }\n}\n\nvariable "os_disk_type" {\n  description = "Tipo do disco do OS"\n  type        = string\n  default     = "Premium_LRS"\n  \n  validation {\n    condition = contains([\n      "Standard_LRS",\n      "StandardSSD_LRS", \n      "Premium_LRS"\n    ], var.os_disk_type)\n    error_message = "OS disk type deve ser: Standard_LRS, StandardSSD_LRS, ou Premium_LRS."\n  }\n}\n\nvariable "data_disk_size_gb" {\n  description = "Tamanho do disco de dados em GB"\n  type        = number\n  default     = 64\n  \n  validation {\n    condition     = var.data_disk_size_gb >= 32 && var.data_disk_size_gb <= 1024\n    error_message = "Data disk size deve estar entre 32GB e 1024GB."\n  }\n}\n\nvariable "vnet_address_space" {\n  description = "Address space para a VNet"\n  type        = string\n  default     = "10.0.0.0/16"\n  \n  validation {\n    condition     = can(cidrhost(var.vnet_address_space, 0))\n    error_message = "VNet address space deve ser um CIDR v\xe1lido."\n  }\n}\n\nvariable "web_subnet_address_prefix" {\n  description = "Address prefix para a subnet web"\n  type        = string\n  default     = "10.0.1.0/24"\n  \n  validation {\n    condition     = can(cidrhost(var.web_subnet_address_prefix, 0))\n    error_message = "Web subnet address prefix deve ser um CIDR v\xe1lido."\n  }\n}\n\nvariable "db_subnet_address_prefix" {\n  description = "Address prefix para a subnet de banco de dados"\n  type        = string\n  default     = "10.0.2.0/24"\n  \n  validation {\n    condition     = can(cidrhost(var.db_subnet_address_prefix, 0))\n    error_message = "DB subnet address prefix deve ser um CIDR v\xe1lido."\n  }\n}\n\nvariable "vm_image" {\n  description = "Imagem da VM"\n  type = object({\n    publisher = string\n    offer     = string\n    sku       = string\n    version   = string\n  })\n  default = {\n    publisher = "Canonical"\n    offer     = "UbuntuServer"\n    sku       = "20.04-LTS-gen2"\n    version   = "latest"\n  }\n}\n\nvariable "tags" {\n  description = "Tags adicionais para aplicar aos recursos"\n  type        = map(string)\n  default     = {}\n  \n  validation {\n    condition     = alltrue([for k, v in var.tags : can(regex("^[a-zA-Z0-9_.-]+$", k))])\n    error_message = "Tag keys devem conter apenas letras, n\xfameros, h\xedfens, underscores e pontos."\n  }\n}\n\nvariable "enable_backup" {\n  description = "Habilitar backup das VMs"\n  type        = bool\n  default     = false\n}\n\nvariable "backup_retention_days" {\n  description = "N\xfamero de dias para reten\xe7\xe3o de backup"\n  type        = number\n  default     = 30\n  \n  validation {\n    condition     = var.backup_retention_days >= 7 && var.backup_retention_days <= 365\n    error_message = "Backup retention deve estar entre 7 e 365 dias."\n  }\n}\n\nvariable "enable_monitoring" {\n  description = "Habilitar monitoring com Log Analytics"\n  type        = bool\n  default     = true\n}\n\nvariable "auto_shutdown_time" {\n  description = "Hor\xe1rio para auto shutdown das VMs (formato 24h: HHMM)"\n  type        = string\n  default     = "1800"\n  \n  validation {\n    condition     = can(regex("^([01]?[0-9]|2[0-3])[0-5][0-9]$", var.auto_shutdown_time))\n    error_message = "Auto shutdown time deve estar no formato HHMM (ex: 1800 para 18:00)."\n  }\n}\n\nvariable "auto_shutdown_timezone" {\n  description = "Timezone para auto shutdown"\n  type        = string\n  default     = "E. South America Standard Time"\n}\n\nvariable "notification_email" {\n  description = "Email para receber notifica\xe7\xf5es de auto-shutdown (opcional)"\n  type        = string\n  default     = ""\n  \n  validation {\n    condition     = var.notification_email == "" || can(regex("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$", var.notification_email))\n    error_message = "Notification email deve ser um email v\xe1lido ou string vazia."\n  }\n}\n\nvariable "allowed_ssh_cidrs" {\n  description = "Lista de CIDRs permitidos para acesso SSH"\n  type        = list(string)\n  default     = ["0.0.0.0/0"]\n  \n  validation {\n    condition = alltrue([\n      for cidr in var.allowed_ssh_cidrs : can(cidrhost(cidr, 0))\n    ])\n    error_message = "Todos os CIDRs devem ser v\xe1lidos."\n  }\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"locals.tf"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'locals {\n  # Naming conventions\n  naming_prefix = "${var.project_name}-${var.environment}"\n  \n  # Resource names usando naming convention\n  resource_group_name    = "${local.naming_prefix}-rg"\n  vnet_name             = "${local.naming_prefix}-vnet"\n  web_subnet_name       = "${local.naming_prefix}-subnet-web"\n  db_subnet_name        = "${local.naming_prefix}-subnet-db"\n  web_nsg_name          = "${local.naming_prefix}-nsg-web"\n  db_nsg_name           = "${local.naming_prefix}-nsg-db"\n  public_ip_name        = "${local.naming_prefix}-pip"\n  nic_name              = "${local.naming_prefix}-nic"\n  vm_name               = "${local.naming_prefix}-vm"\n  lb_name               = "${local.naming_prefix}-lb"\n  key_vault_name        = "${local.naming_prefix}-kv-${random_id.storage_suffix.hex}"\n  log_analytics_name    = "${local.naming_prefix}-law"\n  storage_account_prefix = replace("${var.project_name}${var.environment}diag", "-", "")\n  \n  # DNS prefix para Public IPs\n  dns_prefix = "${var.project_name}${var.environment}${random_id.storage_suffix.hex}"\n  \n  # Common tags aplicadas a todos os recursos\n  common_tags = merge({\n    Project     = var.project_name\n    Environment = var.environment\n    ManagedBy   = "Terraform"\n    CreatedBy   = "TerraformProject"\n    CreatedOn   = formatdate("YYYY-MM-DD", timestamp())\n    Owner       = "DevOps Team"\n    CostCenter  = "IT-Infrastructure"\n    Backup      = var.enable_backup ? "Enabled" : "Disabled"\n    Monitoring  = var.enable_monitoring ? "Enabled" : "Disabled"\n  }, var.tags)\n  \n  # Network configuration\n  network_config = {\n    vnet_address_space         = var.vnet_address_space\n    web_subnet_address_prefix  = var.web_subnet_address_prefix\n    db_subnet_address_prefix   = var.db_subnet_address_prefix\n    dns_servers               = ["168.63.129.16"] # Azure DNS\n  }\n  \n  # VM configuration baseada no environment\n  vm_config = {\n    dev = {\n      size                = "Standard_B1s"\n      os_disk_type       = "Standard_LRS"\n      data_disk_size_gb  = 32\n      enable_backup      = false\n      auto_shutdown      = true\n    }\n    staging = {\n      size                = "Standard_B2s"\n      os_disk_type       = "StandardSSD_LRS"\n      data_disk_size_gb  = 64\n      enable_backup      = true\n      auto_shutdown      = true\n    }\n    prod = {\n      size                = "Standard_D2s_v3"\n      os_disk_type       = "Premium_LRS"\n      data_disk_size_gb  = 128\n      enable_backup      = true\n      auto_shutdown      = false\n    }\n  }\n  \n  # VM size baseado no environment (override da vari\xe1vel se n\xe3o especificado)\n  effective_vm_size = var.vm_size != "Standard_B2s" ? var.vm_size : local.vm_config[var.environment].size\n  effective_os_disk_type = var.os_disk_type != "Premium_LRS" ? var.os_disk_type : local.vm_config[var.environment].os_disk_type\n  effective_data_disk_size = var.data_disk_size_gb != 64 ? var.data_disk_size_gb : local.vm_config[var.environment].data_disk_size_gb\n  \n  # Security rules din\xe2micas\n  web_security_rules = [\n    {\n      name                       = "HTTP"\n      priority                   = 1001\n      direction                  = "Inbound"\n      access                     = "Allow"\n      protocol                   = "Tcp"\n      source_port_range          = "*"\n      destination_port_range     = "80"\n      source_address_prefix      = "*"\n      destination_address_prefix = "*"\n    },\n    {\n      name                       = "HTTPS"\n      priority                   = 1002\n      direction                  = "Inbound"\n      access                     = "Allow"\n      protocol                   = "Tcp"\n      source_port_range          = "*"\n      destination_port_range     = "443"\n      source_address_prefix      = "*"\n      destination_address_prefix = "*"\n    }\n  ]\n  \n  # SSH rules para cada CIDR permitido\n  ssh_security_rules = [\n    for i, cidr in var.allowed_ssh_cidrs : {\n      name                       = "SSH-${i + 1}"\n      priority                   = 1100 + i\n      direction                  = "Inbound"\n      access                     = "Allow"\n      protocol                   = "Tcp"\n      source_port_range          = "*"\n      destination_port_range     = "22"\n      source_address_prefix      = cidr\n      destination_address_prefix = "*"\n    }\n  ]\n  \n  # Todas as security rules combinadas\n  all_security_rules = concat(local.web_security_rules, local.ssh_security_rules)\n  \n  # Configura\xe7\xe3o de backup\n  backup_config = var.enable_backup ? {\n    policy_name           = "${local.naming_prefix}-backup-policy"\n    vault_name           = "${local.naming_prefix}-rsv"\n    retention_daily      = var.backup_retention_days\n    retention_weekly     = 4\n    retention_monthly    = 12\n    retention_yearly     = 1\n    backup_time         = "23:00"\n    backup_timezone     = var.auto_shutdown_timezone\n  } : null\n  \n  # Monitoring configuration\n  monitoring_config = var.enable_monitoring ? {\n    workspace_name       = local.log_analytics_name\n    retention_days      = 30\n    sku                 = "PerGB2018"\n    solutions = [\n      "VMInsights",\n      "Security",\n      "Updates"\n    ]\n  } : null\n  \n  # Auto-shutdown configuration\n  auto_shutdown_config = {\n    enabled          = local.vm_config[var.environment].auto_shutdown\n    time            = var.auto_shutdown_time\n    timezone        = var.auto_shutdown_timezone\n    notification_settings = {\n      enabled         = true\n      time_in_minutes = 30\n      webhook_url     = ""\n      email_recipient = ""\n    }\n  }\n  \n  # Conditional resources flags\n  should_create_load_balancer = var.vm_count > 1\n  should_create_backup = var.enable_backup && local.vm_config[var.environment].enable_backup\n  should_create_monitoring = var.enable_monitoring\n  should_enable_auto_shutdown = local.auto_shutdown_config.enabled\n  \n  # Location mapping para short names\n  location_short = {\n    "Brazil South"              = "brs"\n    "East US"                   = "eus"\n    "East US 2"                 = "eus2"\n    "West US"                   = "wus"\n    "West US 2"                 = "wus2"\n    "Central US"                = "cus"\n    "North Central US"          = "ncus"\n    "South Central US"          = "scus"\n    "West Central US"           = "wcus"\n    "Canada Central"            = "cac"\n    "Canada East"               = "cae"\n    "West Europe"               = "weu"\n    "North Europe"              = "neu"\n    "UK South"                  = "uks"\n    "UK West"                   = "ukw"\n    "France Central"            = "frc"\n    "Germany West Central"      = "gwc"\n    "Switzerland North"         = "swn"\n    "Norway East"               = "noe"\n    "Sweden Central"            = "sec"\n  }\n  \n  # Resource naming com location\n  location_suffix = lookup(local.location_short, var.location, "unknown")\n  \n  # Advanced naming com location\n  advanced_naming = {\n    resource_group    = "${local.naming_prefix}-${local.location_suffix}-rg"\n    storage_account   = lower(replace("${var.project_name}${var.environment}${local.location_suffix}sa${random_id.storage_suffix.hex}", "-", ""))\n    key_vault        = "${local.naming_prefix}-${local.location_suffix}-kv"\n  }\n  \n  # Network ACLs\n  network_acls = {\n    default_action = "Deny"\n    ip_rules = var.environment == "prod" ? [] : ["0.0.0.0/0"]\n    virtual_network_subnet_ids = [\n      # Ser\xe1 preenchido ap\xf3s cria\xe7\xe3o das subnets\n    ]\n  }\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"outputs.tf"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# Resource Group information\noutput "resource_group_name" {\n  description = "Nome do Resource Group criado"\n  value       = azurerm_resource_group.main.name\n}\n\noutput "resource_group_location" {\n  description = "Localiza\xe7\xe3o do Resource Group"\n  value       = azurerm_resource_group.main.location\n}\n\noutput "resource_group_id" {\n  description = "ID do Resource Group"\n  value       = azurerm_resource_group.main.id\n}\n\n# Network information\noutput "virtual_network_name" {\n  description = "Nome da Virtual Network"\n  value       = azurerm_virtual_network.main.name\n}\n\noutput "virtual_network_id" {\n  description = "ID da Virtual Network"\n  value       = azurerm_virtual_network.main.id\n}\n\noutput "virtual_network_address_space" {\n  description = "Address space da Virtual Network"\n  value       = azurerm_virtual_network.main.address_space\n}\n\noutput "web_subnet_id" {\n  description = "ID da subnet web"\n  value       = azurerm_subnet.web.id\n}\n\noutput "database_subnet_id" {\n  description = "ID da subnet database"\n  value       = azurerm_subnet.database.id\n}\n\n# VM information\noutput "vm_names" {\n  description = "Nomes das VMs criadas"\n  value       = azurerm_linux_virtual_machine.main[*].name\n}\n\noutput "vm_ids" {\n  description = "IDs das VMs criadas"\n  value       = azurerm_linux_virtual_machine.main[*].id\n}\n\noutput "vm_private_ip_addresses" {\n  description = "Endere\xe7os IP privados das VMs"\n  value = [\n    for nic in azurerm_network_interface.main :\n    nic.ip_configuration[0].private_ip_address\n  ]\n}\n\noutput "vm_public_ip_addresses" {\n  description = "Endere\xe7os IP p\xfablicos das VMs"\n  value = [\n    for pip in azurerm_public_ip.main :\n    pip.ip_address\n  ]\n}\n\noutput "vm_fqdns" {\n  description = "FQDNs das VMs"\n  value = [\n    for pip in azurerm_public_ip.main :\n    pip.fqdn\n  ]\n}\n\n# Load Balancer information (quando aplic\xe1vel)\noutput "load_balancer_public_ip" {\n  description = "IP p\xfablico do Load Balancer"\n  value       = var.vm_count > 1 ? azurerm_public_ip.lb[0].ip_address : null\n}\n\noutput "load_balancer_fqdn" {\n  description = "FQDN do Load Balancer"\n  value       = var.vm_count > 1 ? azurerm_public_ip.lb[0].fqdn : null\n}\n\n# SSH Key information\noutput "ssh_private_key_pem" {\n  description = "Chave SSH privada em formato PEM"\n  value       = tls_private_key.ssh.private_key_pem\n  sensitive   = true\n}\n\noutput "ssh_public_key" {\n  description = "Chave SSH p\xfablica"\n  value       = tls_private_key.ssh.public_key_openssh\n}\n\n# Storage Account information\noutput "boot_diagnostics_storage_account_name" {\n  description = "Nome da Storage Account para boot diagnostics"\n  value       = azurerm_storage_account.boot_diagnostics.name\n}\n\noutput "boot_diagnostics_storage_account_primary_endpoint" {\n  description = "Endpoint prim\xe1rio da Storage Account"\n  value       = azurerm_storage_account.boot_diagnostics.primary_blob_endpoint\n}\n\n# Key Vault information\noutput "key_vault_name" {\n  description = "Nome do Key Vault"\n  value       = azurerm_key_vault.main.name\n}\n\noutput "key_vault_uri" {\n  description = "URI do Key Vault"\n  value       = azurerm_key_vault.main.vault_uri\n}\n\n# Data disk information\noutput "data_disk_names" {\n  description = "Nomes dos discos de dados"\n  value       = azurerm_managed_disk.data[*].name\n}\n\noutput "data_disk_sizes" {\n  description = "Tamanhos dos discos de dados em GB"\n  value       = azurerm_managed_disk.data[*].disk_size_gb\n}\n\n# Network Security Group information\noutput "web_nsg_id" {\n  description = "ID do Network Security Group web"\n  value       = azurerm_network_security_group.web.id\n}\n\noutput "web_nsg_security_rules" {\n  description = "Regras de seguran\xe7a do NSG web"\n  value = [\n    for rule in azurerm_network_security_group.web.security_rule :\n    {\n      name                   = rule.name\n      priority               = rule.priority\n      direction              = rule.direction\n      access                 = rule.access\n      protocol               = rule.protocol\n      destination_port_range = rule.destination_port_range\n    }\n  ]\n}\n\n# Summary information\noutput "deployment_summary" {\n  description = "Resumo do deployment"\n  value = {\n    project_name          = var.project_name\n    environment           = var.environment\n    location              = var.location\n    vm_count              = var.vm_count\n    vm_size               = local.effective_vm_size\n    resource_group        = azurerm_resource_group.main.name\n    virtual_network       = azurerm_virtual_network.main.name\n    load_balancer_enabled = var.vm_count > 1\n    backup_enabled        = var.enable_backup\n    monitoring_enabled    = var.enable_monitoring\n    total_data_disk_gb    = sum(azurerm_managed_disk.data[*].disk_size_gb)\n    creation_date         = formatdate("YYYY-MM-DD hh:mm:ss ZZZ", timestamp())\n  }\n}\n\n# Cost estimation helper\noutput "cost_estimation_info" {\n  description = "Informa\xe7\xf5es para estimativa de custos"\n  value = {\n    region = var.location\n    vms = [\n      for i in range(var.vm_count) : {\n        name           = azurerm_linux_virtual_machine.main[i].name\n        size           = azurerm_linux_virtual_machine.main[i].size\n        os_disk_type   = azurerm_linux_virtual_machine.main[i].os_disk.0.storage_account_type\n        data_disk_type = azurerm_managed_disk.data[i].storage_account_type\n        data_disk_size = azurerm_managed_disk.data[i].disk_size_gb\n      }\n    ]\n    storage_accounts = [\n      {\n        name         = azurerm_storage_account.boot_diagnostics.name\n        account_tier = azurerm_storage_account.boot_diagnostics.account_tier\n        replication  = azurerm_storage_account.boot_diagnostics.account_replication_type\n      }\n    ]\n    public_ips    = length(azurerm_public_ip.main) + (var.vm_count > 1 ? 1 : 0)\n    load_balancer = var.vm_count > 1\n  }\n}\n\n# Connection information\noutput "connection_info" {\n  description = "Informa\xe7\xf5es de conex\xe3o SSH"\n  value = {\n    username = var.admin_username\n    ssh_command = var.vm_count == 1 ? [\n      "ssh -i private_key.pem ${var.admin_username}@${azurerm_public_ip.main[0].ip_address}"\n      ] : [\n      for i, pip in azurerm_public_ip.main :\n      "ssh -i private_key.pem ${var.admin_username}@${pip.ip_address} # VM ${i + 1}"\n    ]\n  }\n}\n\n# DNS information\noutput "dns_information" {\n  description = "Informa\xe7\xf5es de DNS"\n  value = {\n    public_dns_names = [\n      for pip in azurerm_public_ip.main :\n      pip.fqdn if pip.fqdn != null\n    ]\n    load_balancer_dns = var.vm_count > 1 ? azurerm_public_ip.lb[0].fqdn : null\n  }\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"versions.tf"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# Configura\xe7\xf5es de vers\xe3o e provider requirements\n\nterraform {\n  required_version = ">= 1.5.0"\n\n  required_providers {\n    azurerm = {\n      source  = "hashicorp/azurerm"\n      version = "~> 3.85"\n    }\n    random = {\n      source  = "hashicorp/random"\n      version = "~> 3.6"\n    }\n    tls = {\n      source  = "hashicorp/tls"\n      version = "~> 4.0"\n    }\n    time = {\n      source  = "hashicorp/time"\n      version = "~> 0.10"\n    }\n    null = {\n      source  = "hashicorp/null"\n      version = "~> 3.2"\n    }\n\n  }\n\n  # Configura\xe7\xe3o do backend (descomente se usar remote state)\n  # backend "azurerm" {\n  #   resource_group_name  = "terraform-state-rg"\n  #   storage_account_name = "terraformstatexxxxxx"\n  #   container_name       = "tfstate"\n  #   key                  = "webapp-dev.tfstate"\n  # }\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"additional-resources.tf"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# Recursos adicionais para demonstrar funcionalidades avan\xe7adas do Terraform\n# Log Analytics Workspace (condicional)\nresource "azurerm_log_analytics_workspace" "main" {\n  count               = var.enable_monitoring ? 1 : 0\n  name                = local.log_analytics_name\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  sku                 = "PerGB2018"\n  retention_in_days   = 30\n\n  tags = local.common_tags\n}\n\n# VM Extension para Log Analytics Agent\nresource "azurerm_virtual_machine_extension" "log_analytics" {\n  count                = var.enable_monitoring ? var.vm_count : 0\n  name                 = "OmsAgentForLinux"\n  virtual_machine_id   = azurerm_linux_virtual_machine.main[count.index].id\n  publisher            = "Microsoft.EnterpriseCloud.Monitoring"\n  type                 = "OmsAgentForLinux"\n  type_handler_version = "1.13"\n\n  settings = jsonencode({\n    workspaceId = azurerm_log_analytics_workspace.main[0].workspace_id\n  })\n\n  protected_settings = jsonencode({\n    workspaceKey = azurerm_log_analytics_workspace.main[0].primary_shared_key\n  })\n\n  tags = local.common_tags\n}\n\n# Recovery Services Vault (condicional)\nresource "azurerm_recovery_services_vault" "main" {\n  count               = var.enable_backup ? 1 : 0\n  name                = "${local.naming_prefix}-rsv"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  sku                 = "Standard"\n  soft_delete_enabled = true\n\n  tags = local.common_tags\n}\n\n# Backup Policy\nresource "azurerm_backup_policy_vm" "main" {\n  count               = var.enable_backup ? 1 : 0\n  name                = "${local.naming_prefix}-backup-policy"\n  resource_group_name = azurerm_resource_group.main.name\n  recovery_vault_name = azurerm_recovery_services_vault.main[0].name\n\n  backup {\n    frequency = "Daily"\n    time      = "23:00"\n  }\n\n  retention_daily {\n    count = var.backup_retention_days\n  }\n\n  retention_weekly {\n    count    = 4\n    weekdays = ["Sunday"]\n  }\n\n  retention_monthly {\n    count    = 12\n    weekdays = ["Sunday"]\n    weeks    = ["First"]\n  }\n}\n\n# Protected VM (Backup)\nresource "azurerm_backup_protected_vm" "main" {\n  count               = var.enable_backup ? var.vm_count : 0\n  resource_group_name = azurerm_resource_group.main.name\n  recovery_vault_name = azurerm_recovery_services_vault.main[0].name\n  source_vm_id        = azurerm_linux_virtual_machine.main[count.index].id\n  backup_policy_id    = azurerm_backup_policy_vm.main[0].id\n}\n\n# Auto-shutdown schedule para VMs\nresource "azurerm_dev_test_global_vm_shutdown_schedule" "main" {\n  count              = local.should_enable_auto_shutdown ? var.vm_count : 0\n  virtual_machine_id = azurerm_linux_virtual_machine.main[count.index].id\n  location           = azurerm_resource_group.main.location\n  enabled            = true\n\n  daily_recurrence_time = var.auto_shutdown_time\n  timezone              = var.auto_shutdown_timezone\n\n  # notification_settings \xe9 obrigat\xf3rio - desabilitado se n\xe3o houver email\n  notification_settings {\n    enabled         = var.notification_email != ""\n    time_in_minutes = 30\n    email           = var.notification_email != "" ? var.notification_email : "noreply@example.com"\n  }\n\n  tags = local.common_tags\n}\n\n# Application Security Group\nresource "azurerm_application_security_group" "web" {\n  name                = "${local.naming_prefix}-asg-web"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n\n  tags = local.common_tags\n}\n\n# Associate NICs with ASG\nresource "azurerm_network_interface_application_security_group_association" "web" {\n  count                         = var.vm_count\n  network_interface_id          = azurerm_network_interface.main[count.index].id\n  application_security_group_id = azurerm_application_security_group.web.id\n}\n\n# Azure Monitor Action Group\nresource "azurerm_monitor_action_group" "main" {\n  count               = var.enable_monitoring ? 1 : 0\n  name                = "${local.naming_prefix}-actiongroup"\n  resource_group_name = azurerm_resource_group.main.name\n  short_name          = "webapp-ag"\n\n  email_receiver {\n    name          = "admin"\n    email_address = "admin@empresa.com.br" # Substitua por um email real\n  }\n\n  tags = local.common_tags\n}\n\n# Metric Alert para CPU alta\nresource "azurerm_monitor_metric_alert" "cpu_high" {\n  count               = var.enable_monitoring ? var.vm_count : 0\n  name                = "${azurerm_linux_virtual_machine.main[count.index].name}-cpu-alert"\n  resource_group_name = azurerm_resource_group.main.name\n  scopes              = [azurerm_linux_virtual_machine.main[count.index].id]\n  description         = "Alert when CPU usage is over 80%"\n  severity            = 2\n\n  criteria {\n    metric_namespace = "Microsoft.Compute/virtualMachines"\n    metric_name      = "Percentage CPU"\n    aggregation      = "Average"\n    operator         = "GreaterThan"\n    threshold        = 80\n  }\n\n  action {\n    action_group_id = azurerm_monitor_action_group.main[0].id\n  }\n\n  tags = local.common_tags\n}\n\n# Availability Set para VMs (quando h\xe1 m\xfaltiplas VMs)\nresource "azurerm_availability_set" "main" {\n  count                        = var.vm_count > 1 ? 1 : 0\n  name                         = "${local.naming_prefix}-avset"\n  location                     = azurerm_resource_group.main.location\n  resource_group_name          = azurerm_resource_group.main.name\n  platform_fault_domain_count  = 2\n  platform_update_domain_count = 2\n  managed                      = true\n\n  tags = local.common_tags\n}\n\n# Private DNS Zone para resolu\xe7\xe3o interna\nresource "azurerm_private_dns_zone" "main" {\n  name                = "${var.project_name}.local"\n  resource_group_name = azurerm_resource_group.main.name\n\n  tags = local.common_tags\n}\n\n# Link da Private DNS Zone com a VNet\nresource "azurerm_private_dns_zone_virtual_network_link" "main" {\n  name                  = "${local.naming_prefix}-dns-link"\n  resource_group_name   = azurerm_resource_group.main.name\n  private_dns_zone_name = azurerm_private_dns_zone.main.name\n  virtual_network_id    = azurerm_virtual_network.main.id\n  registration_enabled  = true\n\n  tags = local.common_tags\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"4-configura\xe7\xe3o-dos-ambientes",children:"4. Configura\xe7\xe3o dos Ambientes"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"terraform.tfvars"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# Configura\xe7\xe3o principal do projeto\n\n# Informa\xe7\xf5es do projeto\nproject_name = "webapp"\nenvironment  = "dev"\nlocation     = "Brazil South"\n\n# Configura\xe7\xe3o das VMs\nvm_count          = 2\nvm_size           = "Standard_B2s"\nadmin_username    = "azureuser"\nos_disk_type      = "Premium_LRS"\ndata_disk_size_gb = 64\n\n# Configura\xe7\xe3o de rede\nvnet_address_space        = "10.0.0.0/16"\nweb_subnet_address_prefix = "10.0.1.0/24"\ndb_subnet_address_prefix  = "10.0.2.0/24"\n\n# Lista de CIDRs permitidos para SSH (mais seguro que o source_address_prefix)\nallowed_ssh_cidrs = [\n  "0.0.0.0/0" # Substitua pelo seu IP ou range corporativo\n  # "201.123.45.0/24",  # Exemplo: range corporativo\n  # "10.0.0.0/8"        # Exemplo: rede interna\n]\n\n# Imagem da VM\nvm_image = {\n  publisher = "Canonical"\n  offer     = "UbuntuServer"\n  sku       = "20.04-LTS-gen2"\n  version   = "latest"\n}\n\n# Configura\xe7\xf5es opcionais\nenable_backup         = true\nbackup_retention_days = 30\nenable_monitoring     = true\n\n# Auto-shutdown para economizar custos em dev\nauto_shutdown_time     = "1900" # 19:00\nauto_shutdown_timezone = "E. South America Standard Time"\n\n# Email para notifica\xe7\xf5es (opcional - deixe vazio se n\xe3o quiser notifica\xe7\xf5es)\nnotification_email = "" # Exemplo: "seuemail@dominio.com"\n\n# Tags personalizadas\ntags = {\n  Owner      = "DevOps Team"\n  CostCenter = "TI-Infraestrutura"\n  Project    = "Projeto Final Terraform"\n  Course     = "Udemy Terraform"\n  Student    = "Seu Nome Aqui"\n  Purpose    = "Learning"\n  Department = "Engineering"\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"dev.tfvars"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# Configura\xe7\xe3o espec\xedfica para ambiente de desenvolvimento\n\nproject_name = "webapp"\nenvironment  = "dev"\nlocation     = "Brazil South"\n\n# VMs menores para dev\nvm_count          = 1\nvm_size           = "Standard_B1s"\nadmin_username    = "azureuser"\nos_disk_type      = "Standard_LRS"\ndata_disk_size_gb = 32\n\n# Rede simplificada\nvnet_address_space        = "10.10.0.0/16"\nweb_subnet_address_prefix = "10.10.1.0/24"\ndb_subnet_address_prefix  = "10.10.2.0/24"\n\n# Seguran\xe7a relaxada para dev\nallowed_ssh_cidrs         = ["0.0.0.0/0"]\n\n# Imagem Ubuntu LTS\nvm_image = {\n  publisher = "Canonical"\n  offer     = "UbuntuServer"\n  sku       = "20.04-LTS-gen2"\n  version   = "latest"\n}\n\n# Features desabilitadas para economizar custos\nenable_backup     = false\nenable_monitoring = false\n\n# Auto-shutdown habilitado\nauto_shutdown_time     = "1800" # 18:00\nauto_shutdown_timezone = "E. South America Standard Time"\n\n# Email para notifica\xe7\xf5es (opcional)\nnotification_email = "" # Deixe vazio para sem notifica\xe7\xf5es\n\n# Tags de desenvolvimento\ntags = {\n  Owner       = "Developer"\n  CostCenter  = "R&D"\n  Environment = "Development"\n  AutoDelete  = "true"\n  Purpose     = "Learning"\n  Course      = "Terraform Udemy"\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"prod.tfvars"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# Configura\xe7\xe3o espec\xedfica para ambiente de produ\xe7\xe3o\n\nproject_name = "webapp"\nenvironment  = "prod"\nlocation     = "Brazil South"\n\n# VMs robustas para produ\xe7\xe3o\nvm_count          = 3\nvm_size           = "Standard_D2s_v3"\nadmin_username    = "prodadmin"\nos_disk_type      = "Premium_LRS"\ndata_disk_size_gb = 128\n\n# Rede segmentada\nvnet_address_space        = "10.0.0.0/16"\nweb_subnet_address_prefix = "10.0.1.0/24"\ndb_subnet_address_prefix  = "10.0.2.0/24"\n\n# Seguran\xe7a restrita - substitua pelos IPs da sua organiza\xe7\xe3o\nallowed_ssh_cidrs = [\n  "203.0.113.0/24", # Range corporativo\n  "198.51.100.0/24" # VPN range\n]\n\n# Imagem Ubuntu LTS\nvm_image = {\n  publisher = "Canonical"\n  offer     = "UbuntuServer"\n  sku       = "20.04-LTS-gen2"\n  version   = "latest"\n}\n\n# Features completas para produ\xe7\xe3o\nenable_backup         = true\nbackup_retention_days = 90\nenable_monitoring     = true\n\n# Sem auto-shutdown em produ\xe7\xe3o\nauto_shutdown_time     = "0000" # Desabilitado\nauto_shutdown_timezone = "E. South America Standard Time"\n\n# Tags de produ\xe7\xe3o\ntags = {\n  Owner        = "Operations Team"\n  CostCenter   = "Production"\n  Environment  = "Production"\n  Criticality  = "High"\n  BackupPolicy = "Daily"\n  Monitoring   = "24x7"\n  Compliance   = "Required"\n  DataClass    = "Confidential"\n}\n'})})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},8453:(n,e,a)=>{a.d(e,{R:()=>t,x:()=>s});var r=a(6540);const o={},i=r.createContext(o);function t(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:t(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);