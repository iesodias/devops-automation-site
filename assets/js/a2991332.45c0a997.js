"use strict";(self.webpackChunkdevops_automation_site=self.webpackChunkdevops_automation_site||[]).push([[1587],{1099:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"modulo-02-Introducao-Github-Actions/arquitetura","title":"Arquitetura e Funcionamento do GitHub Actions","description":"Introdu\xe7\xe3o","source":"@site/curso-github-actions-udemy/modulo-02-Introducao-Github-Actions/03-Arquitetura-Funcionamento.md","sourceDirName":"modulo-02-Introducao-Github-Actions","slug":"/modulo-02-Introducao-Github-Actions/arquitetura","permalink":"/udemy/github-actions-automacao/modulo-02-Introducao-Github-Actions/arquitetura","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"arquitetura","title":"Arquitetura e Funcionamento do GitHub Actions"},"sidebar":"tutorialSidebar","previous":{"title":"Componentes do GitHub Actions","permalink":"/udemy/github-actions-automacao/modulo-02-Introducao-Github-Actions/componentes"},"next":{"title":"Navegando pela Interface do GitHub Actions","permalink":"/udemy/github-actions-automacao/modulo-02-Introducao-Github-Actions/interface"}}');var a=s(4848),n=s(8453);const t={id:"arquitetura",title:"Arquitetura e Funcionamento do GitHub Actions"},r="Arquitetura e Funcionamento do GitHub Actions",d={},c=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:2},{value:"Defini\xe7\xe3o",id:"defini\xe7\xe3o",level:2},{value:"Explica\xe7\xe3o T\xe9cnica",id:"explica\xe7\xe3o-t\xe9cnica",level:2},{value:"1. Como os Workflows s\xe3o Processados",id:"1-como-os-workflows-s\xe3o-processados",level:3},{value:"2. Runners Hospedados vs Self-hosted",id:"2-runners-hospedados-vs-self-hosted",level:3},{value:"3. Sistemas Operacionais Dispon\xedveis",id:"3-sistemas-operacionais-dispon\xedveis",level:3},{value:"4. Limites e Cotas da Plataforma",id:"4-limites-e-cotas-da-plataforma",level:3},{value:"Tabela de Limites e Cotas",id:"tabela-de-limites-e-cotas",level:4},{value:"Exemplo Pr\xe1tico",id:"exemplo-pr\xe1tico",level:2},{value:"Output Esperado",id:"output-esperado",level:2},{value:"Conclus\xe3o",id:"conclus\xe3o",level:2}];function l(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.header,{children:(0,a.jsx)(o.h1,{id:"arquitetura-e-funcionamento-do-github-actions",children:"Arquitetura e Funcionamento do GitHub Actions"})}),"\n",(0,a.jsx)(o.h2,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,a.jsx)(o.p,{children:"Compreender a arquitetura interna do GitHub Actions \xe9 fundamental para otimizar workflows e tomar decis\xf5es t\xe9cnicas assertivas. Esta se\xe7\xe3o explora como os workflows s\xe3o processados, os tipos de runners dispon\xedveis e as limita\xe7\xf5es da plataforma."}),"\n",(0,a.jsx)(o.h2,{id:"defini\xe7\xe3o",children:"Defini\xe7\xe3o"}),"\n",(0,a.jsx)(o.p,{children:"A arquitetura do GitHub Actions \xe9 baseada em um sistema distribu\xeddo de processamento de workflows, onde eventos disparam execu\xe7\xf5es que s\xe3o enfileiradas e distribu\xeddas para runners dispon\xedveis. O sistema gerencia recursos, escalabilidade e isolamento automaticamente."}),"\n",(0,a.jsx)(o.h2,{id:"explica\xe7\xe3o-t\xe9cnica",children:"Explica\xe7\xe3o T\xe9cnica"}),"\n",(0,a.jsx)(o.h3,{id:"1-como-os-workflows-s\xe3o-processados",children:"1. Como os Workflows s\xe3o Processados"}),"\n",(0,a.jsxs)(o.p,{children:["O processamento de workflows segue um ciclo bem definido que inicia com um ",(0,a.jsx)(o.strong,{children:"Trigger Event"})," (evento disparador), passa pelo ",(0,a.jsx)(o.strong,{children:"Workflow Parser"})," (analisador de workflow) que interpreta o arquivo YAML, seguido pelo ",(0,a.jsx)(o.strong,{children:"Job Queue"})," (fila de jobs) onde as tarefas aguardam disponibilidade de recursos."]}),"\n",(0,a.jsxs)(o.p,{children:["Ap\xf3s isso, ocorre o ",(0,a.jsx)(o.strong,{children:"Runner Allocation"})," (aloca\xe7\xe3o de runner), onde o sistema seleciona uma m\xe1quina virtual adequada, seguido do ",(0,a.jsx)(o.strong,{children:"Environment Setup"})," (configura\xe7\xe3o do ambiente) que prepara o sistema operacional e ferramentas necess\xe1rias. Em seguida, temos o ",(0,a.jsx)(o.strong,{children:"Step Execution"})," (execu\xe7\xe3o de steps) sequencial conforme definido no workflow, ",(0,a.jsx)(o.strong,{children:"Cleanup"})," (limpeza) autom\xe1tica do ambiente e por fim o ",(0,a.jsx)(o.strong,{children:"Results Storage"})," (armazenamento de resultados) em artifacts."]}),"\n",(0,a.jsxs)(o.p,{children:["O processamento permite execu\xe7\xe3o paralela por padr\xe3o entre jobs independentes, enquanto jobs com depend\xeancias (definidas por ",(0,a.jsx)(o.code,{children:"needs"}),") executam sequencialmente. Matrix jobs criam m\xfaltiplas execu\xe7\xf5es paralelas com diferentes configura\xe7\xf5es, multiplicando efici\xeancia e cobertura de testes."]}),"\n",(0,a.jsx)(o.h3,{id:"2-runners-hospedados-vs-self-hosted",children:"2. Runners Hospedados vs Self-hosted"}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"GitHub-hosted Runners"})," s\xe3o m\xe1quinas virtuais totalmente gerenciadas pelo GitHub, oferecendo ambiente limpo a cada execu\xe7\xe3o. Possuem recursos fixos (2 cores, 7GB RAM, 14GB SSD) e s\xe3o pr\xe9-configurados com ferramentas comuns de desenvolvimento. O isolamento \xe9 garantido automaticamente, mas a customiza\xe7\xe3o \xe9 limitada."]}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Self-hosted Runners"})," s\xe3o sistemas que voc\xea pr\xf3prio deploya e gerencia. Podem ser f\xedsicos, virtuais, em containers, locais ou na nuvem. Oferecem controle total sobre hardware, sistema operacional e software instalado, mas exigem manuten\xe7\xe3o manual e responsabilidade por seguran\xe7a."]}),"\n",(0,a.jsx)(o.p,{children:"A compara\xe7\xe3o revela trade-offs: GitHub-hosted oferece conveni\xeancia e isolamento autom\xe1tico com custos em minutos cobrados, enquanto self-hosted proporciona flexibilidade total e economia (apenas custos de infraestrutura) em troca de responsabilidade de gerenciamento."}),"\n",(0,a.jsx)(o.h3,{id:"3-sistemas-operacionais-dispon\xedveis",children:"3. Sistemas Operacionais Dispon\xedveis"}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Ubuntu (Linux)"})," \xe9 o ambiente mais popular, oferecendo ",(0,a.jsx)(o.code,{children:"ubuntu-latest"})," (22.04), ",(0,a.jsx)(o.code,{children:"ubuntu-22.04"})," e ",(0,a.jsx)(o.code,{children:"ubuntu-20.04"})," (descontinuado). Vem com Docker, Node.js, Python, Java, Maven, Gradle e ferramentas de linha de comando pr\xe9-instaladas."]}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Windows"})," disponibiliza ",(0,a.jsx)(o.code,{children:"windows-latest"})," (Server 2022), ",(0,a.jsx)(o.code,{children:"windows-2022"})," e ",(0,a.jsx)(o.code,{children:"windows-2019"}),". Inclui Git, Node.js, Python, .NET, PowerShell e Chocolatey para gerenciamento de pacotes."]}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"macOS"})," oferece ",(0,a.jsx)(o.code,{children:"macos-latest"})," (Monterey), ",(0,a.jsx)(o.code,{children:"macos-12"})," e ",(0,a.jsx)(o.code,{children:"macos-11"}),". Cont\xe9m Xcode, Swift, Homebrew e ferramentas de desenvolvimento Apple, ideal para builds iOS/macOS."]}),"\n",(0,a.jsx)(o.p,{children:"Cada sistema possui conjunto espec\xedfico de ferramentas pr\xe9-instaladas, atualizadas regularmente pelo GitHub para manter compatibilidade com tecnologias atuais."}),"\n",(0,a.jsx)(o.h3,{id:"4-limites-e-cotas-da-plataforma",children:"4. Limites e Cotas da Plataforma"}),"\n",(0,a.jsx)(o.h4,{id:"tabela-de-limites-e-cotas",children:"Tabela de Limites e Cotas"}),"\n",(0,a.jsxs)(o.table,{children:[(0,a.jsx)(o.thead,{children:(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.th,{children:"Recurso"}),(0,a.jsx)(o.th,{children:"Reposit\xf3rio P\xfablico"}),(0,a.jsx)(o.th,{children:"Reposit\xf3rio Privado"})]})}),(0,a.jsxs)(o.tbody,{children:[(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:(0,a.jsx)(o.strong,{children:"Minutos/m\xeas"})}),(0,a.jsx)(o.td,{children:"Ilimitado"}),(0,a.jsx)(o.td,{children:"2.000 (Free) / 3.000 (Pro)"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:(0,a.jsx)(o.strong,{children:"Armazenamento"})}),(0,a.jsx)(o.td,{children:"500 MB"}),(0,a.jsx)(o.td,{children:"500 MB / 1 GB"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:(0,a.jsx)(o.strong,{children:"Jobs Concurrent"})}),(0,a.jsx)(o.td,{children:"20"}),(0,a.jsx)(o.td,{children:"5 (Free) / 15 (Pro)"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:(0,a.jsx)(o.strong,{children:"Timeout por Job"})}),(0,a.jsx)(o.td,{children:"360 minutos"}),(0,a.jsx)(o.td,{children:"360 minutos"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:(0,a.jsx)(o.strong,{children:"Workflow Execution"})}),(0,a.jsx)(o.td,{children:"1.000 por hora"}),(0,a.jsx)(o.td,{children:"1.000 por hora"})]}),(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:(0,a.jsx)(o.strong,{children:"API Requests"})}),(0,a.jsx)(o.td,{children:"1.000 por hora"}),(0,a.jsx)(o.td,{children:"1.000 por hora"})]})]})]}),"\n",(0,a.jsx)(o.p,{children:"Reposit\xf3rios p\xfablicos t\xeam uso gratuito ilimitado para runners padr\xe3o, incentivando contribui\xe7\xf5es open source. Reposit\xf3rios privados possuem cotas baseadas no plano da conta, com cobran\xe7a adicional quando excedidas."}),"\n",(0,a.jsx)(o.p,{children:"O sistema implementa otimiza\xe7\xf5es como verifica\xe7\xf5es r\xe1pidas antes de builds completos, cache inteligente de depend\xeancias e cleanup autom\xe1tico para economizar recursos e tempo."}),"\n",(0,a.jsx)(o.h2,{id:"exemplo-pr\xe1tico",children:"Exemplo Pr\xe1tico"}),"\n",(0,a.jsxs)(o.p,{children:["Na pr\xe1tica, a arquitetura se manifesta quando um desenvolvedor faz push para o branch main. O sistema detecta o evento, analisa o arquivo YAML na pasta ",(0,a.jsx)(o.code,{children:".github/workflows/"}),", enfileira os jobs definidos e aloca runners conforme disponibilidade."]}),"\n",(0,a.jsxs)(o.p,{children:["Se o workflow define m\xfaltiplos jobs sem depend\xeancias, eles executam paralelamente. Jobs com ",(0,a.jsx)(o.code,{children:"needs"})," aguardam conclus\xe3o de predecessores. Matrix strategies criam m\xfaltiplas inst\xe2ncias do mesmo job com configura\xe7\xf5es diferentes."]}),"\n",(0,a.jsx)(o.h2,{id:"output-esperado",children:"Output Esperado"}),"\n",(0,a.jsx)(o.p,{children:"A execu\xe7\xe3o revela informa\xe7\xf5es detalhadas sobre:"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"Sistema"}),": Identifica\xe7\xe3o do OS, arquitetura, recursos dispon\xedveis"]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"Runner"}),": Tipo utilizado, especifica\xe7\xf5es, tempo de aloca\xe7\xe3o"]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"Performance"}),": Dura\xe7\xe3o de cada step, uso de recursos, throughput"]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"Artefatos"}),": Logs detalhados, arquivos gerados, m\xe9tricas de execu\xe7\xe3o"]}),"\n"]}),"\n",(0,a.jsx)(o.h2,{id:"conclus\xe3o",children:"Conclus\xe3o"}),"\n",(0,a.jsx)(o.p,{children:"A arquitetura do GitHub Actions combina simplicidade na interface com robustez na infraestrutura. O sistema distribu\xeddo garante escalabilidade autom\xe1tica, enquanto as op\xe7\xf5es de runners oferecem flexibilidade entre conveni\xeancia (GitHub-hosted) e controle total (self-hosted)."}),"\n",(0,a.jsx)(o.p,{children:"Compreender esses fundamentos permite construir workflows eficientes, escolher runners adequados ao contexto e otimizar custos respeitando limites da plataforma. A arquitetura incentiva boas pr\xe1ticas atrav\xe9s de suas limita\xe7\xf5es, resultando em solu\xe7\xf5es mais sustent\xe1veis e perform\xe1ticas."})]})}function u(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,o,s)=>{s.d(o,{R:()=>t,x:()=>r});var i=s(6540);const a={},n=i.createContext(a);function t(e){const o=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(n.Provider,{value:o},e.children)}}}]);