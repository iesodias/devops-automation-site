"use strict";(self.webpackChunkdevops_automation_site=self.webpackChunkdevops_automation_site||[]).push([[2251],{2369:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"tutorial-github-actions/lab-03-udemy","title":"Lab de GitHub Actions: Primeiros Passos em Automa\xe7\xe3o CI/CD","description":"\ud83d\udc49 Veja meu curso da Udemy: Curso DevOps na Pr\xe1tica","source":"@site/docs/tutorial-github-actions/04-lab-03-udemy.md","sourceDirName":"tutorial-github-actions","slug":"/tutorial-github-actions/lab-03-udemy","permalink":"/docs/tutorial-github-actions/lab-03-udemy","draft":false,"unlisted":false,"editUrl":"https://github.com/iesodias/devops-automation-site/tree/main/docs/tutorial-github-actions/04-lab-03-udemy.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"lab-03-udemy-ssh","permalink":"/docs/tutorial-github-actions/lab-03-udemy-ssh"}}');var i=n(4848),r=n(8453);const d={},a="Lab de GitHub Actions: Primeiros Passos em Automa\xe7\xe3o CI/CD",c={},l=[{value:"Lab-01: Overview do GitHub Actions",id:"lab-01-overview-do-github-actions",level:2},{value:"Lab-02: Primeiro Workflow",id:"lab-02-primeiro-workflow",level:2},{value:"Lab-03: M\xfaltiplos Stages (Jobs) e Depend\xeancias",id:"lab-03-m\xfaltiplos-stages-jobs-e-depend\xeancias",level:2}];function t(e){const o={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"lab-de-github-actions-primeiros-passos-em-automa\xe7\xe3o-cicd",children:"Lab de GitHub Actions: Primeiros Passos em Automa\xe7\xe3o CI/CD"})}),"\n",(0,i.jsxs)(o.p,{children:["\ud83d\udc49 Veja meu curso da Udemy: ",(0,i.jsx)(o.a,{href:"https://devopsautomation.com.br/go/udemy-cupom",children:"Curso DevOps na Pr\xe1tica"})]}),"\n",(0,i.jsx)(o.p,{children:'Bem-vindo(a) ao seu laborat\xf3rio de GitHub Actions! Aqui voc\xea dar\xe1 os primeiros passos para automatizar tarefas de desenvolvimento e implanta\xe7\xe3o, transformando o "medo do terminal" em dom\xednio da automa\xe7\xe3o.'}),"\n",(0,i.jsx)(o.hr,{}),"\n",(0,i.jsx)(o.h2,{id:"lab-01-overview-do-github-actions",children:"Lab-01: Overview do GitHub Actions"}),"\n",(0,i.jsxs)(o.p,{children:["O GitHub Actions \xe9 uma plataforma de ",(0,i.jsx)(o.strong,{children:"Integra\xe7\xe3o Cont\xednua (CI)"})," e ",(0,i.jsx)(o.strong,{children:"Entrega Cont\xednua (CD)"})," que permite automatizar o seu fluxo de trabalho de desenvolvimento diretamente no GitHub."]}),"\n",(0,i.jsx)(o.p,{children:"Com ele, voc\xea pode:"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.strong,{children:"Construir"})," e ",(0,i.jsx)(o.strong,{children:"testar"})," seu c\xf3digo automaticamente."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.strong,{children:"Implantar"})," suas aplica\xe7\xf5es em diferentes ambientes."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.strong,{children:"Automatizar"})," tarefas de rotina, como linting, formata\xe7\xe3o de c\xf3digo, etc."]}),"\n",(0,i.jsxs)(o.li,{children:["Tudo isso a partir de arquivos ",(0,i.jsx)(o.strong,{children:"YAML"})," configurados no seu reposit\xf3rio."]}),"\n"]}),"\n",(0,i.jsxs)(o.p,{children:['Pense no GitHub Actions como um "rob\xf4" que executa tarefas por voc\xea, a cada vez que uma condi\xe7\xe3o que voc\xea define \xe9 atendida (como um ',(0,i.jsx)(o.code,{children:"push"})," de c\xf3digo ou a abertura de um ",(0,i.jsx)(o.code,{children:"Pull Request"}),")."]}),"\n",(0,i.jsx)(o.hr,{}),"\n",(0,i.jsx)(o.h2,{id:"lab-02-primeiro-workflow",children:"Lab-02: Primeiro Workflow"}),"\n",(0,i.jsx)(o.p,{children:"Neste lab, vamos criar nosso primeiro workflow bem simples para entender a estrutura b\xe1sica de um arquivo YAML de GitHub Actions."}),"\n",(0,i.jsxs)(o.ol,{children:["\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Crie um Reposit\xf3rio no GitHub:"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["V\xe1 para o seu GitHub e crie um novo reposit\xf3rio com o nome ",(0,i.jsx)(o.code,{children:"mdc-githubactions"}),". Voc\xea pode deix\xe1-lo p\xfablico ou privado."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Abra o Reposit\xf3rio no seu Ambiente Local:"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["Clone o reposit\xf3rio para o seu computador local usando o Git:","\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-bash",children:"git clone https://github.com/SEU_USUARIO/mdc-githubactions.git\ncd mdc-githubactions\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Crie o Diret\xf3rio do Workflow:"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["Na raiz do seu reposit\xf3rio local, crie a estrutura de diret\xf3rios necess\xe1ria para os workflows. \xc9 onde o GitHub Actions espera encontrar seus arquivos de configura\xe7\xe3o.","\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-bash",children:"mkdir -p .github/workflows\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Crie e Edite o Arquivo YAML do Workflow:"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsxs)(o.p,{children:["Dentro do diret\xf3rio rec\xe9m-criado (",(0,i.jsx)(o.code,{children:".github/workflows/"}),"), crie um arquivo YAML com o nome ",(0,i.jsx)(o.code,{children:"mdc-workflow.yml"}),"."]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-bash",children:"touch .github/workflows/mdc-workflow.yml\n"})}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsxs)(o.p,{children:["Abra o arquivo ",(0,i.jsx)(o.code,{children:"mdc-workflow.yml"})," em um editor de texto (VS Code, Sublime Text, etc.) e cole o conte\xfado abaixo:"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-yaml",children:"name: Mdc Workflow\n\non:\n  push:\n    branches:\n      - main # Ou 'master', dependendo do nome da sua branch principal\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout do C\xf3digo\n        uses: actions/checkout@v2 # Action para clonar o reposit\xf3rio\n\n      - name: Mostrar Mensagem\n        run: echo \"Ol\xe1, MDC, GitHub Actions!\" # Comando a ser executado\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Entendendo a Estrutura do Workflow:"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.code,{children:"name"}),": ",(0,i.jsx)(o.strong,{children:"Define o nome do workflow."}),' Este \xe9 um r\xf3tulo que aparecer\xe1 na interface do GitHub Actions para identificar o workflow (ex: "Mdc Workflow").']}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.code,{children:"on"}),": ",(0,i.jsx)(o.strong,{children:"Define quando o workflow ser\xe1 acionado."})]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"push"}),": Indica que o evento \xe9 um ",(0,i.jsx)(o.code,{children:"push"})," (envio) de c\xf3digo."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"branches"}),": Especifica as branches que devem acionar o workflow. Nesse caso, o workflow ser\xe1 acionado apenas quando houver um ",(0,i.jsx)(o.code,{children:"push"})," na branch ",(0,i.jsx)(o.code,{children:"main"})," (ou ",(0,i.jsx)(o.code,{children:"master"}),", se for o caso do seu reposit\xf3rio)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.code,{children:"jobs"}),": ",(0,i.jsxs)(o.strong,{children:["Define os ",(0,i.jsx)(o.code,{children:"jobs"})," (tarefas) a serem executados no workflow."]})," Um workflow pode ter um ou v\xe1rios jobs."]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"build"}),": \xc9 o nome do seu primeiro (e \xfanico, por enquanto) job. Pode ser um nome descritivo (ex: ",(0,i.jsx)(o.code,{children:"test"}),", ",(0,i.jsx)(o.code,{children:"deploy"}),")."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"runs-on"}),": Especifica o ",(0,i.jsx)(o.strong,{children:"sistema operacional"})," em que o job ser\xe1 executado. Neste caso, o job ser\xe1 executado em uma m\xe1quina com sistema operacional Ubuntu (",(0,i.jsx)(o.code,{children:"ubuntu-latest"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.code,{children:"steps"}),": ",(0,i.jsxs)(o.strong,{children:["Define as etapas a serem executadas dentro de um ",(0,i.jsx)(o.code,{children:"job"}),"."]})," Um job pode ter um ou v\xe1rios steps, que s\xe3o executados em sequ\xeancia."]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"- name: Checkout do C\xf3digo"}),": Define o nome da primeira etapa."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"uses: actions/checkout@v2"}),": Especifica uma ",(0,i.jsx)(o.strong,{children:"a\xe7\xe3o pr\xe9-constru\xedda"})," que ser\xe1 utilizada na etapa. A ",(0,i.jsx)(o.code,{children:"actions/checkout@v2"})," \xe9 uma a\xe7\xe3o comum que clona o c\xf3digo do seu reposit\xf3rio para o ambiente de execu\xe7\xe3o do workflow."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"- name: Mostrar Mensagem"}),": Define o nome da segunda etapa."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:'run: echo "Ol\xe1, MDC, GitHub Actions!"'}),": Especifica o ",(0,i.jsx)(o.strong,{children:"comando ou script"})," a ser executado na etapa. Neste caso, o comando ",(0,i.jsx)(o.code,{children:"echo"})," \xe9 usado para mostrar a mensagem no console de sa\xedda do workflow."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Fa\xe7a o Commit e Push do C\xf3digo:"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["Salve o arquivo ",(0,i.jsx)(o.code,{children:"mdc-workflow.yml"}),"."]}),"\n",(0,i.jsxs)(o.li,{children:["Adicione os arquivos ao Git, fa\xe7a o commit e envie para o GitHub:","\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-bash",children:"git add .\ngit commit -m \"feat: Adiciona primeiro workflow de GitHub Actions\"\ngit push origin main # Ou 'master'\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Verifique a Execu\xe7\xe3o no GitHub:"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["Ap\xf3s o ",(0,i.jsx)(o.code,{children:"push"}),", v\xe1 para o seu reposit\xf3rio no GitHub. Clique na aba ",(0,i.jsx)(o.strong,{children:'"Actions"'}),"."]}),"\n",(0,i.jsxs)(o.li,{children:["Voc\xea ver\xe1 o seu workflow (",(0,i.jsx)(o.code,{children:"Mdc Workflow"}),") sendo executado (ou j\xe1 conclu\xeddo com sucesso). Clique nele para ver os detalhes, incluindo a sa\xedda do comando ",(0,i.jsx)(o.code,{children:"echo"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(o.hr,{}),"\n",(0,i.jsx)(o.h2,{id:"lab-03-m\xfaltiplos-stages-jobs-e-depend\xeancias",children:"Lab-03: M\xfaltiplos Stages (Jobs) e Depend\xeancias"}),"\n",(0,i.jsxs)(o.p,{children:['Neste lab, vamos expandir nosso workflow para simular um processo de CI/CD mais complexo, com m\xfaltiplos "est\xe1gios" ou "jobs" que dependem uns dos outros. Isso \xe9 fundamental para orquestrar fluxos de trabalho como ',(0,i.jsx)(o.code,{children:"build"})," -> ",(0,i.jsx)(o.code,{children:"deploy-dev"})," -> ",(0,i.jsx)(o.code,{children:"deploy-qa"})," -> ",(0,i.jsx)(o.code,{children:"deploy-prod"}),"."]}),"\n",(0,i.jsxs)(o.ol,{children:["\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Edite o Arquivo YAML do Workflow:"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsxs)(o.p,{children:["Abra novamente o arquivo ",(0,i.jsx)(o.code,{children:".github/workflows/mdc-workflow.yml"})," no seu editor."]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.strong,{children:"Substitua"})," todo o conte\xfado atual pelo YAML abaixo:"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-yaml",children:"name: Mdc Workflow\n\non:\n  push:\n    branches:\n      - main # Ou 'master'\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    \n    steps:\n      - name: Checkout do C\xf3digo\n        uses: actions/checkout@v2\n\n  dev:\n    needs: build # Este job S\xd3 roda depois que 'build' terminar com sucesso\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Fase de Desenvolvimento\n        run: echo \"Executando deploy de DEV\"\n\n  qa:\n    needs: build # Este job TAMB\xc9M S\xd3 roda depois que 'build' terminar com sucesso\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Fase de Qualidade\n        run: echo \"Executando deploy de QA\"\n\n  homologacao:\n    needs:\n      - dev # Este job S\xd3 roda depois que 'dev' e 'qa' terminarem com sucesso\n      - qa\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Fase de Homologa\xe7\xe3o\n        run: echo \"Executando deploy de HML\"\n\n  producao:\n    needs: homologacao # Este job S\xd3 roda depois que 'homologacao' terminar com sucesso\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Fase de Produ\xe7\xe3o\n        run: echo \"Executando deploy de PRD\"\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Entendendo as Novidades:"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsxs)(o.strong,{children:["M\xfaltiplos ",(0,i.jsx)(o.code,{children:"jobs"}),":"]})," Agora temos cinco jobs: ",(0,i.jsx)(o.code,{children:"build"}),", ",(0,i.jsx)(o.code,{children:"dev"}),", ",(0,i.jsx)(o.code,{children:"qa"}),", ",(0,i.jsx)(o.code,{children:"homologacao"})," e ",(0,i.jsx)(o.code,{children:"producao"}),"."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"needs"}),": Esta \xe9 a palavra-chave mais importante aqui. Ela define as ",(0,i.jsx)(o.strong,{children:"depend\xeancias entre os jobs"}),".","\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"dev"})," e ",(0,i.jsx)(o.code,{children:"qa"})," s\xf3 ser\xe3o executados ",(0,i.jsx)(o.em,{children:"depois"})," que o job ",(0,i.jsx)(o.code,{children:"build"})," for conclu\xeddo com sucesso. Eles podem rodar em paralelo entre si, pois ambos dependem apenas de ",(0,i.jsx)(o.code,{children:"build"}),"."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"homologacao"})," s\xf3 ser\xe1 executado ",(0,i.jsx)(o.em,{children:"depois"})," que ",(0,i.jsx)(o.strong,{children:"ambos"})," os jobs ",(0,i.jsx)(o.code,{children:"dev"})," e ",(0,i.jsx)(o.code,{children:"qa"})," forem conclu\xeddos com sucesso."]}),"\n",(0,i.jsxs)(o.li,{children:[(0,i.jsx)(o.code,{children:"producao"})," s\xf3 ser\xe1 executado ",(0,i.jsx)(o.em,{children:"depois"})," que o job ",(0,i.jsx)(o.code,{children:"homologacao"})," for conclu\xeddo com sucesso."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Fa\xe7a o Commit e Push do C\xf3digo Novamente:"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["Salve o arquivo ",(0,i.jsx)(o.code,{children:"mdc-workflow.yml"}),"."]}),"\n",(0,i.jsxs)(o.li,{children:["Adicione os arquivos ao Git, fa\xe7a o commit e envie para o GitHub:","\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-bash",children:"git add .\ngit commit -m \"feat: Adiciona multiplos stages com dependencias\"\ngit push origin main # Ou 'master'\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.strong,{children:"Verifique a Orquestra\xe7\xe3o no GitHub:"})}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsxs)(o.li,{children:["Volte para a aba ",(0,i.jsx)(o.strong,{children:'"Actions"'})," no seu reposit\xf3rio do GitHub."]}),"\n",(0,i.jsx)(o.li,{children:"Voc\xea ver\xe1 a nova execu\xe7\xe3o do workflow. Clique nela."}),"\n",(0,i.jsxs)(o.li,{children:["Observe o ",(0,i.jsx)(o.strong,{children:"gr\xe1fico visual"})," que o GitHub Actions mostra. Ele ilustra claramente a ordem de execu\xe7\xe3o e as depend\xeancias entre os jobs, mostrando como ",(0,i.jsx)(o.code,{children:"dev"})," e ",(0,i.jsx)(o.code,{children:"qa"})," rodam em paralelo ap\xf3s ",(0,i.jsx)(o.code,{children:"build"}),", e como ",(0,i.jsx)(o.code,{children:"homologacao"})," espera por ambos antes de ",(0,i.jsx)(o.code,{children:"producao"})," ser acionado."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(o.hr,{}),"\n",(0,i.jsx)(o.p,{children:"Com este lab, voc\xea n\xe3o apenas criou seu primeiro workflow, mas tamb\xe9m aprendeu a orquestrar m\xfaltiplas tarefas em um fluxo sequencial e paralelo. Isso \xe9 a base para construir pipelines de CI/CD robustos!"}),"\n",(0,i.jsx)(o.p,{children:"Tem alguma d\xfavida ou gostaria de explorar outros aspectos do GitHub Actions?"})]})}function u(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>d,x:()=>a});var s=n(6540);const i={},r=s.createContext(i);function d(e){const o=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:o},e.children)}}}]);