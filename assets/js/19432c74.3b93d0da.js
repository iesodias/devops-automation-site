"use strict";(self.webpackChunkdevops_automation_site=self.webpackChunkdevops_automation_site||[]).push([[170],{3512:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>i,contentTitle:()=>u,default:()=>l,frontMatter:()=>t,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"22-lab-kevault","title":"Lab 22 - Criando uma M\xe1quina Virtual no Azure com senha armazenada no Key Vault usando Terraform","description":"Introdu\xe7\xe3o","source":"@site/curso-terraform-udemy/40-lab-keyvault.md","sourceDirName":".","slug":"/22-lab-kevault","permalink":"/udemy/terraform-automacao/22-lab-kevault","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"id":"22-lab-kevault","title":"Lab 22 - Criando uma M\xe1quina Virtual no Azure com senha armazenada no Key Vault usando Terraform","noindex":true},"sidebar":"tutorialSidebar","previous":{"title":"Lab 21 - Criando uma M\xe1quina Virtual no Azure com senha armazenada no Key Vault usando Terraform","permalink":"/udemy/terraform-automacao/21-criar-vm-kevault"}}');var o=r(4848),s=r(8453);const t={id:"22-lab-kevault",title:"Lab 22 - Criando uma M\xe1quina Virtual no Azure com senha armazenada no Key Vault usando Terraform",noindex:!0},u="Criando uma M\xe1quina Virtual no Azure com Senha no Key Vault usando Terraform",i={},d=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:2},{value:"Estrutura de diret\xf3rios",id:"estrutura-de-diret\xf3rios",level:2},{value:"Comandos: Prepara\xe7\xe3o com Azure CLI",id:"comandos-prepara\xe7\xe3o-com-azure-cli",level:2},{value:"Arquivo <code>main.tf</code>",id:"arquivo-maintf",level:2},{value:"Arquivo <code>variables.tf</code>",id:"arquivo-variablestf",level:2},{value:"Arquivo <code>outputs.tf</code>",id:"arquivo-outputstf",level:2},{value:"Arquivo <code>terraform.tfvars</code>",id:"arquivo-terraformtfvars",level:2},{value:"Comandos Terraform",id:"comandos-terraform",level:2},{value:"Output esperado",id:"output-esperado",level:2},{value:"Conclus\xe3o",id:"conclus\xe3o",level:2}];function c(e){const a={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.header,{children:(0,o.jsx)(a.h1,{id:"criando-uma-m\xe1quina-virtual-no-azure-com-senha-no-key-vault-usando-terraform",children:"Criando uma M\xe1quina Virtual no Azure com Senha no Key Vault usando Terraform"})}),"\n",(0,o.jsx)(a.h2,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,o.jsxs)(a.p,{children:["Este laborat\xf3rio mostra como criar uma m\xe1quina virtual Linux no Azure utilizando Terraform, mas com um diferencial de seguran\xe7a: a senha da VM ser\xe1 armazenada de forma segura no ",(0,o.jsx)(a.strong,{children:"Azure Key Vault"}),", e recuperada dinamicamente no momento da execu\xe7\xe3o. Isso evita que senhas sens\xedveis fiquem expostas em arquivos ",(0,o.jsx)(a.code,{children:".tf"})," ou ",(0,o.jsx)(a.code,{children:".tfvars"})," no reposit\xf3rio. Este tipo de pr\xe1tica \xe9 fundamental quando falamos de seguran\xe7a em ambientes de infraestrutura como c\xf3digo."]}),"\n",(0,o.jsx)(a.hr,{}),"\n",(0,o.jsx)(a.h2,{id:"estrutura-de-diret\xf3rios",children:"Estrutura de diret\xf3rios"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-bash",children:"mkdir vm-keyvault && cd vm-keyvault\n\ntouch main.tf variables.tf outputs.tf terraform.tfvars\n"})}),"\n",(0,o.jsx)(a.hr,{}),"\n",(0,o.jsx)(a.h2,{id:"comandos-prepara\xe7\xe3o-com-azure-cli",children:"Comandos: Prepara\xe7\xe3o com Azure CLI"}),"\n",(0,o.jsx)(a.p,{children:"Antes de rodar o Terraform, precisamos preparar o ambiente no Azure:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-bash",children:'az group create --name rg-tf-vm-keyvault --location eastus\n\naz keyvault create \\\n  --name kv-tf-lab \\\n  --resource-group rg-tf-vm-keyvault \\\n  --location eastus\n\naz keyvault secret set \\\n  --vault-name kv-tf-lab \\\n  --name vmPassword \\\n  --value "SenhaSuperSegura123"\n'})}),"\n",(0,o.jsxs)(a.blockquote,{children:["\n",(0,o.jsx)(a.p,{children:"\u26a0\ufe0f Aten\xe7\xe3o: O segredo precisa ser criado manualmente. O Terraform vai apenas ler esse valor e aplicar na cria\xe7\xe3o da VM."}),"\n"]}),"\n",(0,o.jsx)(a.hr,{}),"\n",(0,o.jsxs)(a.h2,{id:"arquivo-maintf",children:["Arquivo ",(0,o.jsx)(a.code,{children:"main.tf"})]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-hcl",children:'provider "azurerm" {\n  features {}\n}\n\ndata "azurerm_resource_group" "rg" {\n  name = var.resource_group_name\n}\n\ndata "azurerm_key_vault" "kv" {\n  name                = var.key_vault_name\n  resource_group_name = var.resource_group_name\n}\n\ndata "azurerm_key_vault_secret" "vm_password" {\n  name         = var.secret_name\n  key_vault_id = data.azurerm_key_vault.kv.id\n}\n\nresource "azurerm_virtual_network" "vnet" {\n  name                = "vnet"\n  address_space       = ["10.0.0.0/16"]\n  location            = var.location\n  resource_group_name = data.azurerm_resource_group.rg.name\n}\n\nresource "azurerm_subnet" "subnet" {\n  name                 = "subnet"\n  resource_group_name  = data.azurerm_resource_group.rg.name\n  virtual_network_name = azurerm_virtual_network.vnet.name\n  address_prefixes     = ["10.0.1.0/24"]\n}\n\nresource "azurerm_public_ip" "public_ip" {\n  name                = "public-ip"\n  location            = var.location\n  resource_group_name = data.azurerm_resource_group.rg.name\n  allocation_method   = "Static"\n  sku                 = "Standard"\n}\n\nresource "azurerm_network_interface" "nic" {\n  name                = "nic"\n  location            = var.location\n  resource_group_name = data.azurerm_resource_group.rg.name\n\n  ip_configuration {\n    name                          = "internal"\n    subnet_id                     = azurerm_subnet.subnet.id\n    private_ip_address_allocation = "Dynamic"\n    public_ip_address_id          = azurerm_public_ip.public_ip.id\n  }\n}\n\nresource "azurerm_linux_virtual_machine" "vm" {\n  name                = var.vm_name\n  location            = var.location\n  resource_group_name = data.azurerm_resource_group.rg.name\n  size                = "Standard_B1s"\n  admin_username      = var.admin_username\n  admin_password      = data.azurerm_key_vault_secret.vm_password.value\n  disable_password_authentication = false\n  network_interface_ids = [azurerm_network_interface.nic.id]\n\n  os_disk {\n    caching              = "ReadWrite"\n    storage_account_type = "Standard_LRS"\n    name                 = "osdisk"\n  }\n\n  source_image_reference {\n    publisher = "Canonical"\n    offer     = "UbuntuServer"\n    sku       = "18.04-LTS"\n    version   = "latest"\n  }\n}\n'})}),"\n",(0,o.jsx)(a.hr,{}),"\n",(0,o.jsxs)(a.h2,{id:"arquivo-variablestf",children:["Arquivo ",(0,o.jsx)(a.code,{children:"variables.tf"})]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-hcl",children:'variable "resource_group_name" { type = string }\nvariable "location" { type = string }\nvariable "key_vault_name" { type = string }\nvariable "secret_name" { type = string }\nvariable "vm_name" { type = string }\nvariable "admin_username" { type = string }\n'})}),"\n",(0,o.jsx)(a.hr,{}),"\n",(0,o.jsxs)(a.h2,{id:"arquivo-outputstf",children:["Arquivo ",(0,o.jsx)(a.code,{children:"outputs.tf"})]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-hcl",children:'output "public_ip" {\n  value       = azurerm_public_ip.public_ip.ip_address\n  description = "IP p\xfablico da VM"\n}\n'})}),"\n",(0,o.jsx)(a.hr,{}),"\n",(0,o.jsxs)(a.h2,{id:"arquivo-terraformtfvars",children:["Arquivo ",(0,o.jsx)(a.code,{children:"terraform.tfvars"})]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-hcl",children:'resource_group_name = "rg-tf-vm-keyvault"\nlocation            = "eastus"\nkey_vault_name      = "kv-tf-lab"\nsecret_name         = "vmPassword"\nvm_name             = "vm-keyvault-demo"\nadmin_username      = "azureuser"\n'})}),"\n",(0,o.jsx)(a.hr,{}),"\n",(0,o.jsx)(a.h2,{id:"comandos-terraform",children:"Comandos Terraform"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-bash",children:"terraform init\nterraform plan -out=tfplan\nterraform apply tfplan\n"})}),"\n",(0,o.jsx)(a.hr,{}),"\n",(0,o.jsx)(a.h2,{id:"output-esperado",children:"Output esperado"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-txt",children:'Apply complete! Resources: 6 added, 0 changed, 0 destroyed.\n\nOutputs:\npublic_ip = "52.170.12.34"\n'})}),"\n",(0,o.jsx)(a.hr,{}),"\n",(0,o.jsx)(a.h2,{id:"conclus\xe3o",children:"Conclus\xe3o"}),"\n",(0,o.jsx)(a.p,{children:"Esse laborat\xf3rio demonstrou como criar uma VM segura no Azure utilizando Terraform e integrando o Azure Key Vault para armazenar a senha da VM. Essa abordagem reduz riscos de exposi\xe7\xe3o de dados sens\xedveis e representa uma pr\xe1tica recomendada para ambientes profissionais. Al\xe9m disso, refor\xe7a o conceito de separa\xe7\xe3o de responsabilidades: a infraestrutura \xe9 declarada com Terraform, e os segredos s\xe3o gerenciados de forma segura pelo Key Vault."}),"\n",(0,o.jsx)(a.p,{children:"Na pr\xf3xima aula, voc\xea poder\xe1 experimentar acessar essa VM usando SSH com a senha segura ou ajustar o provisionamento para usar chaves p\xfablicas e privadas."})]})}function l(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>t,x:()=>u});var n=r(6540);const o={},s=n.createContext(o);function t(e){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function u(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);